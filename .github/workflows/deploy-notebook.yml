name: Dynamic Databricks Notebook Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Export Notebook from Source Workspace
      run: |
        ORIGIN_HOST=${{ secrets.DATABRICKS_ORIGIN_HOST }}
        ORIGIN_TOKEN=${{ secrets.DATABRICKS_ORIGIN_TOKEN }}
        NOTEBOOK_PATH="/Workspace/Users/instructor_datasmartada@outlook.com/source/mount_adls_storage"

        echo "Exportando notebook desde el workspace de origen..."
        curl -s -X GET \
          -H "Authorization: Bearer $ORIGIN_TOKEN" \
          "$ORIGIN_HOST/api/2.0/workspace/export?path=$NOTEBOOK_PATH&format=SOURCE" \
          > tmp_export.json

        echo "Decodificando base64..."
        jq -r .content tmp_export.json | base64 --decode > exported_notebook.py
        rm tmp_export.json

    - name: Create destination directory if needed
      run: |
        DEST_HOST=${{ secrets.DATABRICKS_DEST_HOST }}
        DEST_TOKEN=${{ secrets.DATABRICKS_DEST_TOKEN }}
        DEST_FOLDER_PATH="/py"

        echo "Creando carpeta de destino si no existe..."
        curl -s -X POST \
          -H "Authorization: Bearer $DEST_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{\"path\": \"$DEST_FOLDER_PATH\"}" \
          "$DEST_HOST/api/2.0/workspace/mkdirs"

    - name: Import Notebook to Destination Workspace
      run: |
        DEST_HOST=${{ secrets.DATABRICKS_DEST_HOST }}
        DEST_TOKEN=${{ secrets.DATABRICKS_DEST_TOKEN }}
        DEST_NOTEBOOK_PATH="/py/mount"

        echo "Codificando contenido para importaci√≥n..."
        CONTENT_BASE64=$(base64 -w 0 exported_notebook.py)

        echo "Importando notebook al workspace de destino..."
        curl -s -X POST \
          -H "Authorization: Bearer $DEST_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{
            \"path\": \"$DEST_NOTEBOOK_PATH\",
            \"format\": \"SOURCE\",
            \"language\": \"PYTHON\",
            \"content\": \"$CONTENT_BASE64\",
            \"overwrite\": true
          }" \
          "$DEST_HOST/api/2.0/workspace/import"

    - name: Clean up
      run: rm -f exported_notebook.py

    - name: Done
      run: echo "Deploy completed successfully!"
